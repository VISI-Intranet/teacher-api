[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 19.0.1)
[debug]       Load.loadUnit: plugins took 37.607334ms
[debug]       Load.loadUnit: defsScala took 0.106417ms
[debug] [Loading] Scanning directory /Users/erasyl/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/erasyl/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.692917 ms
[debug]           Load.resolveProject(global-plugins) took 18.700666ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/erasyl/.sbt/1.0/plugins, plugins: List(<none>))) took 34.133084ms
[debug] [Loading] Done in /Users/erasyl/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 42.624209ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.07225ms
[debug]     Load.loadUnit(file:/Users/erasyl/.sbt/1.0/plugins/, ...) took 83.274792ms
[debug]   Load.apply: load took 1181.460292ms
[debug]   Load.apply: resolveProjects took 2.955125ms
[debug]   Load.apply: finalTransforms took 28.988584ms
[debug]   Load.apply: config.delegates took 2.607084ms
[debug]   Load.apply: Def.make(settings)... took 7986.674166ms
[debug]   Load.apply: structureIndex took 48.624667ms
[debug]   Load.apply: mkStreams took 0.887042ms
[info] loading global plugins from /Users/erasyl/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 10763.355375ms
[debug]           Load.loadUnit: plugins took 2693.585125ms
[debug]           Load.loadUnit: defsScala took 0.003459ms
[debug] [Loading] Scanning directory /Users/erasyl/Desktop/code/Scala/ScalaPostgresNew/ScalaServicePostgress/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/erasyl/Desktop/code/Scala/ScalaPostgresNew/ScalaServicePostgress/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.505709 ms
[debug]               Load.resolveProject(scalaservicepostgress-build) took 3.135084ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalaservicepostgress-build, base: /Users/erasyl/Desktop/code/Scala/ScalaPostgresNew/ScalaServicePostgress/project, plugins: List(<none>))) took 7.643917ms
[debug] [Loading] Done in /Users/erasyl/Desktop/code/Scala/ScalaPostgresNew/ScalaServicePostgress/project, returning: (scalaservicepostgress-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 15.556333ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.007ms
[debug]         Load.loadUnit(file:/Users/erasyl/Desktop/code/Scala/ScalaPostgresNew/ScalaServicePostgress/project/, ...) took 2711.169958ms
[debug]       Load.apply: load took 2712.515209ms
[debug]       Load.apply: resolveProjects took 0.142958ms
[debug]       Load.apply: finalTransforms took 6.098791ms
[debug]       Load.apply: config.delegates took 0.341458ms
[debug]       Load.apply: Def.make(settings)... took 53.707875ms
[debug]       Load.apply: structureIndex took 15.618333ms
[debug]       Load.apply: mkStreams took 0.011583ms
[info] loading project definition from /Users/erasyl/Desktop/code/Scala/ScalaPostgresNew/ScalaServicePostgress/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 148692.486917ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory /Users/erasyl/Desktop/code/Scala/ScalaPostgresNew/ScalaServicePostgress
[debug]       Load.loadUnit: mkEval took 4.934833ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.671542 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 1.021542ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /Users/erasyl/Desktop/code/Scala/ScalaPostgresNew/ScalaServicePostgress, plugins: List(<none>))) took 2.043292ms
[debug] [Loading] Done in /Users/erasyl/Desktop/code/Scala/ScalaPostgresNew/ScalaServicePostgress, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1109.641333ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.306458ms
[debug]   Load.loadUnit(file:/Users/erasyl/Desktop/code/Scala/ScalaPostgresNew/ScalaServicePostgress/, ...) took 149806.231875ms
[debug] Load.apply: load took 149807.12975ms
[debug] Load.apply: resolveProjects took 0.076375ms
[debug] Load.apply: finalTransforms took 3.439583ms
[debug] Load.apply: config.delegates took 0.13825ms
[debug] Load.apply: Def.make(settings)... took 50.844833ms
[debug] Load.apply: structureIndex took 10.716625ms
[debug] Load.apply: mkStreams took 0.005042ms
[info] set current project to ScalaServicePostgress (in build file:/Users/erasyl/Desktop/code/Scala/ScalaPostgresNew/ScalaServicePostgress/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/erasyl/.sbt/1.0/server/8c43c2db50114e21401e/sock
[debug] Writing bsp connection file
[info] started sbt server
